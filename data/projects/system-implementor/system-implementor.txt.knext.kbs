;; (I VE BEEN LOOKING OVER THE CODE FOR THE SYSTEM IMPLEMENTOR AND IT LOOKS PRETTY GOOD)

	;; A CODE CAN BE FOR A SYSTEM IMPLEMENTOR.

		(and (code_27 ?x1) (be_27 ?e1 ?x1) (for_27 ?x1 ?x2) (A_27 ?x2) (SYSTEM_27 ?x2) (IMPLEMENTOR_27 ?x2))

	;; A THING-REFERRED-TO MAY LOOK GOOD.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (LOOK_27 ?x1) (GOOD_27 ?x1))

;; (BASICALLY IT PROCESSES A TEXT WITH KNEXT COMMA THEN POSTPROCESSES THE OUTPUT)

	;; A THING-REFERRED-TO MAY PROCESS A TEXT WITH A KNEXT[PERSON??].

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (PROCESS_27 ?x1) (A_27 ?x1) (TEXT_27 ?x1) (WITH_27 ?x1) (A_27 ?x1) (KNEXT_27 ?x1) (PERSON_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [5]>

;; (THIS IS ENOUGH TO SPECIFY CLASSES COMMA ATTRIBUTES COMMA AND FUNCTIONS)

	;; 

	;; NIL

		( (nil_27 ?x1))

	;; ______________________________________________________________________

	;; Break 1 [5]>

		( (Break_27 ?x1))

;; (TO GET THE EXACT BEHAVIOR WILL BE MORE DIFFICULT)

	;; A BEHAVIOR CAN BE EXACT.

		(and (BEHAVIOR_27 ?x1) (CAN_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EXACT_27 ?x2))

;; (WE WOULD HAVE TO ALIGN THE TEXT AGAINST THESE OBJECTS AND EXTRACT THE RELATIONSHIPS BETWEEN THE ITEMS IN THE
 TEXT)

	;; A TEXT CAN BE AGAINST OBJECTS.

		(and (TEXT_27 ?x1) (CAN_27 ?x1) (BE_27 ?x1) (AGAINST_27 ?x1) (OBJECTS_27 ?x1))

	;; RELATIONSHIPS CAN BE BETWEEN ITEMS.

		(and (RELATIONSHIPS_27 ?x1) (CAN_27 ?x1) (BE_27 ?x1) (BETWEEN_27 ?x1) (ITEMS_27 ?x1))

	;; ITEMS CAN BE IN A TEXT.

		(and (ITEMS_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (TEXT_27 ?x2))

;; (THEN POPULATE PERHAPS FUNCTIONS THAT WOULD IMPLEMENT THE DESIRED BEHAVIOR)

	;; A BEHAVIOR CAN BE DESIRED.

		(and (BEHAVIOR_27 ?x1) (be_27 ?e1 ?x1 ?e2) (desire_27 ?e2 ?x1))
